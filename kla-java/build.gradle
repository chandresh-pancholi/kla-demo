buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

bootJar {
    baseName = 'kla-java-core'
//    version = '0.1.0'
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}


dependencies {
    compile("net.devh:grpc-spring-boot-starter:2.3.0.RELEASE") {
        exclude group: 'io.grpc', module: 'grpc-netty-shaded'
    }

    compile "io.grpc:grpc-netty:1.18.0"

    compile("org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE")
    
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.4.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.3.9.Final'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
    
    compile 'com.google.protobuf:protobuf-java:3.0.0'
    compile 'io.grpc:grpc-stub:1.18.0'
    compile 'io.grpc:grpc-protobuf:1.18.0'

    compile group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: '1.16.0'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    implementation 'com.github.BAData:protobuf-converter:1.1.5'

    testImplementation 'junit:junit:4.12'
}

jar {
    baseName = "kla-java"
}

sourceCompatibility = 1.8

configurations {
    providedRuntime
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.0.0'
        generatedFilesBaseDir = "$projectDir/src"
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.18.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc {}
        }
    }
}